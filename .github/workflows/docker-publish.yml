name: Docker Publish

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}



jobs:
  build-push-docker:
    permissions:
      contents: read
      packages: write
      id-token: write

    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@79abd3f86f79a9d68a23c75a09a9a85889262adf

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:          
          context: NetCoreHelloWorldDocker
          dockerfile: NetCoreHelloWorldDocker/Dockerfile
          push: true
          tags: |
            ${{ steps.meta.outputs.tags }}
            ${{ github.sha }}
            latest
          labels: ${{ steps.meta.outputs.labels }}

  build-package:
    permissions:
      contents: read
      packages: write
      id-token: write

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.x
      
      - name: Restore dependencies
        run: dotnet restore
        working-directory: NetCoreHelloWorldDocker
      
      - name: Build
        run: dotnet pack -o out/ /p:RepositoryUrl=https://github.com/${{ github.repository }}
        working-directory: NetCoreHelloWorldDocker
      
      - name: publish 
        run: dotnet nuget push out/*.nupkg --source https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json --api-key ${{ secrets.GITHUB_TOKEN }} --skip-duplicate
        working-directory: NetCoreHelloWorldDocker